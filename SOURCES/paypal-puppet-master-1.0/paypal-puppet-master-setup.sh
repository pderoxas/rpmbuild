#!/bin/bash

####################################################
#This script will prompt the installer for the key #
#information related to each specific terminal     #
####################################################

#variables for the config files to modify/create
NOW=$(date +"%F.%H%M%S")
LOG_FILE="/var/log/$NOW_paypal_setup.log"
PUPPET_CONF=/etc/puppet/puppet.conf
FACTS_CONF=/etc/facter/facts.d/pos.txt
mkdir -p /etc/facter/facts.d

usage()
{
    echo "This script will create the required configuration files for the PayPal Puppet Agent that will run on each POS Terminal"
    echo "Usage:"
    echo "./paypal-puppet-agent-setup.sh"
    echo "   -h, --help"
    echo "   -pmh, --puppet-master-hostname=<Hostname>   #The full qualified domain name of the Puppet Master"
    echo "   -gl, --geo-location=<GEO Location>          #The GEO Location Code of this terminal"    
    echo "   -sn, --store-number=<Store Number>          #The Store Number of this terminal"
    echo "   -s, --silent                                #Silent mode for unattended execution"
    echo ""
}

#define global variables
PUPPET_MASTER=""
GEO_LOCATION=""
STORE_NUMBER=""
SILENT_MODE=false
 
while [ "$1" != "" ]; do
    PARAM=`echo $1 | awk -F= '{print $1}'`
    VALUE=`echo $1 | awk -F= '{print $2}'`
    case $PARAM in
        -h | --help)
            usage
            exit
            ;;

        -pmh | --puppet-master-hostname)
            PUPPET_MASTER=$VALUE
            ;;
        -gl | --geo-location)
            GEO_LOCATION=$VALUE
            ;;
        -sn | --store-number)
            STORE_NUMBER=$VALUE
            ;;
        -s | --silent)
            SILENT_MODE=true
            ;;
        *)
            echo "ERROR: unknown parameter \"$PARAM\""
            usage
            exit 1
            ;;
    esac
    shift
done



#####################################################
# Helper function to prompt for user input and      #
# sets the provided variable with the value entered #
#####################################################
promptForValue() {

  read -p "$1": userResponse

  local  __valueVar=$2
  local  value=$userResponse
  if [[ "$__valueVar" ]]; then
     eval $__valueVar="$value"
  else
     echo "$value"
  fi
}

#####################################################
# Main function to prompt for values for config(s)  #
#####################################################
setupQuestions() {
  echo "========= PayPal Puppet Master Setup ========="

  if [[ -z "$PUPPET_MASTER" ]]; then
    promptForValue "Please enter the PUPPET MASTER HOSTNAME" PUPPET_MASTER
  fi

  if [[ -z "$GEO_LOCATION" ]]; then
    promptForValue "Please enter the GEO LOCATION CODE" GEO_LOCATION
  fi

  if [[ -z "$STORE_NUMBER" ]]; then
    promptForValue "Please enter the STORE NUMBER" STORE_NUMBER
  fi
  
  echo ""
  echo "Values entered:"
  printf "%-25s %s\n" "PUPPET MASTER HOSTNAME:" $PUPPET_MASTER
  printf "%-25s %s\n" "GEO LOCATION CODE:" $GEO_LOCATION
  printf "%-25s %s\n" "STORE_NUMBER:" $STORE_NUMBER
  echo ""
}


#execute the main function until the user is satisfied
echo "SILENT_MODE=$SILENT_MODE"

while [ $SILENT_MODE = false ]
do
  #execute the main function
  setupQuestions

  read -p "Are these values correct? (y|n): " choice
  case "$choice" in 
    y|Y ) break;;
    * ) PUPPET_MASTER=""; GEO_LOCATION=""; STORE_NUMBER=""; echo "Please try again...";;
  esac
done

#set the puppet.conf content
echo '#Generated by paypal-puppet-master-setup.sh' > $PUPPET_CONF
echo '[main]' >> $PUPPET_CONF
echo '   logdir = /var/log/puppet' >> $PUPPET_CONF
echo '   rundir = /var/run/puppet' >> $PUPPET_CONF
echo '[master]' >> $PUPPET_CONF
echo '   ssldir = $vardir/master-ssl' >> $PUPPET_CONF
echo '   autosign = true' >> $PUPPET_CONF
echo '   reports = store, http' >> $PUPPET_CONF
echo '   reporturl = http://192.168.1.5:3000/reports/upload' >> $PUPPET_CONF
echo '[agent]' >> $PUPPET_CONF
echo '   ssldir = $vardir/agent-ssl' >> $PUPPET_CONF
echo '   classfile = $vardir/classes.txt' >> $PUPPET_CONF
echo '   localconfig = $vardir/localconfig' >> $PUPPET_CONF
echo "   server = $PUPPET_MASTER" >> $PUPPET_CONF
echo '   runinterval = 1m' >> $PUPPET_CONF
echo '   pluginsync = true' >> $PUPPET_CONF
echo '   report = true' >> $PUPPET_CONF

echo ""
echo "-------------------------------------------------"
echo "Puppet configuration file created at $PUPPET_CONF"
cat $PUPPET_CONF

#set the pos.txt FACTS file
echo "geo_location=$GEO_LOCATION" > $FACTS_CONF
echo "store_number=$STORE_NUMBER" >> $FACTS_CONF
echo ""
echo "-------------------------------------------------"
echo "Custom Facter facts file created at $FACTS_CONF"
cat $FACTS_CONF
echo "-------------------------------------------------"

sleep 5
echo "Testing Puppet connection to main server..."
sudo puppet agent --test > $LOG_FILE

if grep -q "Finished catalog run" "$LOG_FILE"; then
  #Start the services and set to start on boot
  sudo service puppetmaster start
  sudo service puppet start
  sudo chkconfig puppetmaster on
  sudo chkconfig puppet on
  echo ""
  echo "*******************************************************"
  echo "*** PayPal Puppet Master/Agent Setup was successful ***"
  echo "*******************************************************"
else
  echo ""
  echo "*************************************************"
  echo "***     PayPal Puppet Master Setup FAILED     ***"
  echo "*************************************************"
fi




